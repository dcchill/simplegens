repositories {
  maven {
      url = 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
  }
}

dependencies {
  implementation fg.deobf('software.bernie.geckolib:geckolib-forge-1.20.1:4.2.2')
}

minecraft {
  runs {
     client {
        property 'mixin.env.remapRefMap', 'true'
        property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
    }

      server {
        property 'mixin.env.remapRefMap', 'true'
        property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
    }
      data {
        property 'mixin.env.remapRefMap', 'true'
        property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
    }
  }
}

def extraModsDir = 'extra-mods-1.20.1'
task addnewfoldersmods(type: DefaultTask){
  ant.mkdir(dir: 'extra-mods-1.20.1/');
}
repositories {
  flatDir {
  name "extra-mods" 
  dir file(extraModsDir)
  }
}

dependencies 
{
  for (extraModJar in fileTree(dir: extraModsDir, include: '*.jar')) {
  def basename = extraModJar.name.substring(0, extraModJar.name.length() - ".jar".length()) 
  def versionSep = basename.lastIndexOf('-') 
  assert versionSep != -1 
  def artifactId = basename.substring(0, versionSep) 
  def version = basename.substring(versionSep + 1)
  runtimeOnly fg.deobf("extra-mods:$artifactId:$version")}
}
minecraft {
 mappings channel: 'official', version: '1.20.1'
  accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
 runs {
  client {
      workingDirectory project.file('run')
      property 'forge.logging.markers', 'REGISTRIES'
      property 'forge.logging.console.level', 'debug'
      property 'mixin.env.remapRefMap', 'true'
      property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"
      mods {
          examplemod {
              source sourceSets.main
          }
      }
  }
  server {
      workingDirectory project.file('run')
      property 'forge.logging.markers', 'REGISTRIES'
      property 'forge.logging.console.level', 'debug'
      property 'mixin.env.remapRefMap', 'true'
      property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"
      mods {
          examplemod {
              source sourceSets.main
          }
      }
        }
      }
         }

